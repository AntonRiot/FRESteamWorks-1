public function init():Boolean
public function runCallbacks():Boolean
public function getUserID():String
public function getAppID():uint
public function getAvailableGameLanguages():String
public function getCurrentGameLanguage():String
public function getPersonaName():String
public function useCrashHandler(appID:uint, version:String, date:String, time:String):Boolean
/* stats/achievements */
public function requestStats():Boolean
public function setAchievement(name:String):Boolean
public function clearAchievement(name:String):Boolean
public function isAchievement(name:String):Boolean
public function getStatInt(name:String):int
public function getStatFloat(name:String):Number
public function setStatInt(name:String, value:int):Boolean
public function setStatFloat(name:String, value:Number):Boolean
public function storeStats():Boolean
public function resetAllStats(achievementsToo:Boolean):Boolean
/* cloud */
public function getFileCount():int
public function getFileSize(name:String):int
public function fileExists(name:String):Boolean
public function fileWrite(name:String, data:ByteArray):Boolean
public function fileRead(name:String, data:ByteArray):Boolean
public function fileDelete(name:String):Boolean
public function fileShare(name:String):Boolean
public function fileShareResult():String
public function isCloudEnabledForApp():Boolean
public function setCloudEnabledForApp(enabled:Boolean):Boolean
public function getQuota():Array
/* ugc/workshop */
public function UGCDownload(handle:String, priority:int):Boolean
public function UGCRead(handle:String, size:int, offset:uint, data:ByteArray):Boolean
public function getUGCDownloadProgress(handle:String):Array
public function getUGCDownloadResult(handle:String):DownloadUGCResult
public function publishWorkshopFile(name:String, preview:String, appId:uint, title:String, description:String, visibility:uint, tags:Array, fileType:uint):Boolean
public function publishWorkshopFileResult():String
public function deletePublishedFile(file:String):Boolean
public function getPublishedFileDetails(file:String, maxAge:int = 0):Boolean
public function getPublishedFileDetailsResult(file:String):FileDetailsResult
public function enumerateUserPublishedFiles(startIndex:uint):Boolean
public function enumerateUserPublishedFilesResult():UserFilesResult
public function enumeratePublishedWorkshopFiles(type:uint, start:uint, count:uint, days:uint, tags:Array, userTags:Array):Boolean
public function enumeratePublishedWorkshopFilesResult():WorkshopFilesResult
public function enumerateUserSubscribedFiles(startIndex:uint):Boolean
public function enumerateUserSubscribedFilesResult():SubscribedFilesResult
public function enumerateUserSharedWorkshopFiles(steamID:String, start:uint, required:Array, excluded:Array):Boolean
public function enumerateUserSharedWorkshopFilesResult():UserFilesResult
public function enumeratePublishedFilesByUserAction(action:uint, startIndex:uint):Boolean
public function enumeratePublishedFilesByUserActionResult():FilesByUserActionResult
public function subscribePublishedFile(file:String):Boolean
public function unsubscribePublishedFile(file:String):Boolean
public function createPublishedFileUpdateRequest(file:String):String
public function updatePublishedFileFile(handle:String, file:String):Boolean
public function updatePublishedFilePreviewFile(handle:String, preview:String):Boolean
public function updatePublishedFileTitle(handle:String, title:String):Boolean
public function updatePublishedFileDescription(handle:String, description:String):Boolean
public function updatePublishedFileSetChangeDescription(handle:String, changeDesc:String):Boolean
public function updatePublishedFileVisibility(handle:String, visibility:uint):Boolean
public function updatePublishedFileTags(handle:String, tags:Array):Boolean
public function commitPublishedFileUpdate(handle:String):Boolean
public function getPublishedItemVoteDetails(file:String):Boolean
public function getPublishedItemVoteDetailsResult():ItemVoteDetailsResult
public function getUserPublishedItemVoteDetails(file:String):Boolean
public function getUserPublishedItemVoteDetailsResult():UserVoteDetails
public function updateUserPublishedItemVote(file:String, upvote:Boolean):Boolean
public function setUserPublishedFileAction(file:String, action:uint):Boolean
/* overlay */
public function activateGameOverlay(dialog:String):Boolean
public function activateGameOverlayToUser(dialog:String, steamId:String):Boolean
public function activateGameOverlayToWebPage(url:String):Boolean
public function activateGameOverlayToStore(appId:uint, flag:uint):Boolean
public function activateGameOverlayInviteDialog(steamIdLobby:String):Boolean
public function isOverlayEnabled():Boolean
/* DLC / subscriptions */
public function isSubscribedApp(appId:uint):Boolean
public function isDLCInstalled(appId:uint):Boolean
public function getDLCCount():int
public function installDLC(appId:uint):Boolean
public function uninstallDLC(appId:uint):Boolean
public function DLCInstalledResult():uint
